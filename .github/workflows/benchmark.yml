name: Run parallel benchmarks

on:
  workflow_dispatch:
  push:
    branches: [ "main" ]
    paths:
      - './github/workflows/benchmark.yml'
      - '**.cs'
      - '**.csproj'
      - '**.sln'

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.out.outputs.matrix }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 1
          submodules: true
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x
      - name: Restore Benchmark
        run: dotnet restore
      - name: Build Benchmark
        run: dotnet build -c Release /p:CheckCacheMisses=false
      - name: Run Tests
        run: dotnet test -c Release
      - name: Build benchmark
        run: dotnet publish -c Release Benchmark/Benchmark.csproj -o .benchmark
      - name: Prepare benchmarks list
        run: ./.benchmark/Benchmark --list > benchmarks.txt
      - name: Prepare Matrix
        id: out
        run: |
          echo "{\"benchmark\": $(jq --raw-input --slurp --compact-output 'split("\n") | map(select(. != ""))' benchmarks.txt)}" > matrix.json
          cat matrix.json
          echo "matrix=$(cat matrix.json)" >> $GITHUB_OUTPUT
      - name: Archive benchmark build
        uses: actions/upload-artifact@v4
        with:
          name: benchmark
          path: .benchmark/
          retention-days: 1
  
  run:
    runs-on: ubuntu-latest
    needs: build
    strategy:
      matrix: ${{ fromJson(needs.build.outputs.matrix) }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 1
          submodules: true
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x
      - name: Download Benchmark
        uses: actions/download-artifact@v4
        with:
          name: benchmark
          path: .benchmark/
      - name: Run Benchmark
        run: |
          chmod +x ./.benchmark/Benchmark
          ./.benchmark/Benchmark benchmark=${{ matrix.benchmark }}
      - name: Upload Benchmark Report
        uses: actions/upload-artifact@v4
        with:
          name: benchmark-report-${{ matrix.benchmark }}
          path: |
            .benchmark_results/${{ matrix.benchmark }}/results/*.md
            .benchmark_results/hwinfo
          retention-days: 1
          
  merge-reports:
    runs-on: ubuntu-latest
    needs: run
    steps:
      - name: Download Benchmark Reports
        uses: actions/download-artifact@v4
        with:
          merge-multiple: true
          path: .benchmark_results/
      - name: Merge Benchmark Reports
        run: |
            find .benchmark_results/ | sed -e "s/[^-][^\/]*\// |/g" -e "s/|\([^ ]\)/|-\1/"
            echo -e "# Build from:\n" >> report.md
            echo -e "https://github.com/blackbone/other-ecs-benchmarks/commit/$GITHUB_SHA\n" >> report.md
            echo -e "HW Info:\n" >> report.md
            cat .benchmark_results/hwinfo >> report.md
            echo -e "\n" >> report.md
            find .benchmark_results -name '*.md' -print0 | while IFS= read -r -d '' file; do
            cat "$file" >> report.md
            echo -e "\n" >> report.md
            done
      - name: Update Gist
        uses: exuanbo/actions-deploy-gist@v1
        with:
          token: ${{ secrets.TOKEN }}
          gist_id: 6d254a684cf580441bf58690ad9485c3
          file_path: report.md